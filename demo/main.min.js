window['ISSET']=function(a,b) {if(typeof b === 'undefined') {return typeof a !== 'undefined';} else {return typeof a === b;}throw(new Error("How did I get here?"));};String.prototype.startsWith = function(needle) {return this.indexOf(needle) == 0;};String.prototype.contains = function(needle) {return this.indexOf(needle) >= 0;};window['Logger'] = {whitelist: [],blacklist: [],useWhitelist: false,allow: function(file, obj, method) {for(var item in Logger.blacklist ) {if(item.matches(file, obj, method)) return false;}if(Logger.useWhitelist) {for(var item in Logger.whitelist) {if(item.matches(file, obj, method)) return true;}}else{return true;}return false;},create: function(file, obj){var self=this;self.obj=obj;self.file=file;self.log=function(stuff, usePrefix){if(window['Logger'].allow(self.file,self.obj, 'log')){if((!ISSET(usePrefix))||usePrefix){try{stuff=(ISSET(stuff,'object')?JSON.stringify(stuff):stuff);}catch(ex){}finally{console.log(window['Logger'].getPrefix(self.file, self.obj, 'log')+stuff);}}else{console.log({origin:{file:self.file,object:self.obj},data:stuff});}}};self.err=function(stuff){if(window['Logger'].allow(self.file,self.obj, 'err')){console.error(window['Logger'].getPrefix(self.file, self.obj, 'err')+stuff);}};return self;},getPrefix: function(file, obj, method) {return (method=='log'?"":method+" ")+(ISSET(file)?file+">":"")+obj+":";}};window['Node'] = function() {  var self=this;  self.connection = new DataConnection();  self.userId = self.connection.userid;  self.connection.onopen = function(e) {console.log(e);};  self.messageReciever = function() {};  self.setMessageReciever = function(reciever) {    self.messageReciever = reciever;    self.connection.onmessage = reciever;  };  self.sendData = function(data, reciever) {    }  return self;};window['RemoteNode'] = function() {};window['Network'] = function(name) {  var self = this;  self.name=name;  self.parents=[  'Object',  'Network'  ];  self.channel=  self.process=function() {        throw(new Error("Someone tried to use an abstract function in Network.\nUse a non abstract version (i.e., ManagedNetwork or DynamicNetwork)!"));  };  return self;};window['ManagedNetwork'] = function(name, setup) {  var self = new Network(name);    return self;};window['DynamicNetwork'] = function(name, setup) {  var self = new Network();    return self;};var Help = {logger: Logger.create("Help.js", "help"),register: function(domEl, helpText) {$(domEl).attr('help-rq', 'true').attr('help-text', helpText);return Help.refresh();},unregister: function(element) {$(element).attr('help-rq', 'false').off('mouseover mouseout');return Help;},refresh: function() {$('[help-rq="true"]').off('mouseover mouseout').unbind('mouseover mouseout').bind('mouseover', function(ev) {Help.logger.log(ev, false);Help.help(ev.currentTarget);}).bind('mouseout', function(ev) {Help.logger.log(ev, false);if($(ev.currentTarget).attr('help-active')=='true') {$('#help-div').hide();$(ev.currentTarget).attr('help-active', 'false');}});return Help;},help: function(domEl) {if($(domEl).attr('help-rq')=='false'){Help.unregister(domEl);return Help;}$('#help-div').show().html($(domEl).attr('help-text')).css('right', ($(window).width()-295)+'px').css('top', $(domEl).offset().top  + 'px');$(domEl).attr('help-active', 'true');if(ISSET($(domEl).attr('help-color'))){$('#help-div').css('background-color', $(domEl).attr('help-color'));}return Help;},setColor: function(domEl, color) {$(domEl).attr('help-color', color);return Help;}};var JSmolInterface = {info: {color:"#FFFFFF",height: 300,width:300,j2s:"../jsmol/jsmol/j2s/",use:"HTML5 WebGl Java"readyFunction:function(ev){console.log(["Ready!",ev]);}},start: function(domEl){$(domEl).html(Jmol.getAppletHtml("JSmol1",JSmolInterface.info));}};function Input(args) {if((!ISSET(args['name'])) && (!ISSET(args,'String')))throw(new Error("You need to specify name!"));if(ISSET(args, 'String'))args['name']=args;var self = this;self.logger=new Logger.create('input.js', 'Input');self.tRow="<tr>\<td><font style='color:white;background:red;' class='input-delete'>X</font></td>\<td><input type='text' class='input-element input'/></td>\<td><input type='text' class='input-X input input-numeric'/></td>\<td><input type='text' class='input-Y input input-numeric'/></td>\<td><input type='text' class='input-Z input input-numeric'/></td>\</tr>".replace('\t','');self.updateListeners = function() {$('.input-Z').off('keydown');$('.input-delete').off('click');$('.input-element').off('blur keyup');$('.input-numeric').off('keyup blur');$('.input-Z').keydown(function(ev) {if(ev.keyCode!=9 || ev.shiftKey)return;console.log('a');console.log(ev);self.logger.log('hi');var tr=$(this).parent().parent();var tbody=tr.parent();var trIndex=$(tr).index();console.log('b');var nextTr;if(ISSET(nextTr=$(tbody).children().eq(trIndex+1)[0])) {console.log('c1');console.log(nextTr);$(nextTr).children().eq(0).children.eq(0).focus();}else{console.log('c2');(new Input({name: $(tbody).parent().attr('id')})).addRow().find('input-element').focus();}});$('.input-delete').click(function() {var td=$(this).parent();var tr=$(td).parent();if($($(tr).parent()).children().size()>1)tr.remove();});$('.input-element').bind('keyup blur', function(ev) {var text=$(this).val();for(var i=1; i < elements.length; i++) {if(elements[i][symbol]==text){$(this).addClass('element-valid').removeClass('element-invalid');Help.unregister($(this));if($(self.dom).find('element-invalid').size()==0 && ISSET(self.onUpdate))try{self.onUpdate();}catch(ex){}return;}}$(this).removeClass('element-valid').addClass('element-invalid');Help.register($(this), "That's not a valid element.");});$('.input-numeric').bind('keyup blur', function(ev) {var text = $(this).val();if(!isNaN(text)) {$(this).addClass('element-valid').removeClass('element-invalid');Help.unregister($(this));if($(self.dom).find('element-invalid').size()==0 && ISSET(self.onUpdate))try{self.onUpdate();}catch(ex){}} else {$(this).removeClass('element-valid').addClass('element-invalid');Help.register($(this), "You need to type in a valid number");}});};self.name=args['name'];self.addRow = function() {if(!ISSET(self.dom)) {self.dom = $('table#'+self.name)[0];}var tbody=$(self.dom).find("tbody");var newRow=$(self.tRow);tbody.append(newRow);self.updateListeners();self.logger.log('Successfully added row!');return newRow;};self.getData = function() {var obj = {};if(!ISSET(self.dom)) {self.dom = $('table#'+self.name)[0];}var tbody = $(self.dom).find('tbody');obj.len=$(tbody).children().size();for(var i = 0; i < obj.len; i++) {var temp = $(tbody).children().eq(i);var rowObj = {}rowObj.element=$(temp).find('.input-element').val();rowObj.X=Number($(temp).find('.input-X').val());rowObj.Y=Number($(temp).find('.input-Y').val());rowObj.Z=Number($(temp).find('.input-Z').val());obj[i]=rowObj;}return obj;};if(ISSET(self.supr=args['dom'])){if(ISSET($('#'+args['name'])[0]))throw(new Error('Input with specified name \'' + args['name'] + '\' already exists'));self.supr.innerHTML="\<table id=" + self.name + ">\<thead><tr><th></th><th>Element</th><th>X</th><th>Y</th><th>Z</th></tr></thead>\<tbody></tbody>\</table>";self.dom=$('#'+self.name);self.addRow();}return self;}var elements = [null,{symbol:'H', name:"Hydrogen", number: 1, weight: 1.008},{symbol:'He',name:"Helium",number:2,weight: 4.2602},{symbol:'Li',name:"Lithium", number: 3,weight: 6.94},{symbol:'Be',name:"Beryllium",number: 4,weight:9.012182},{symbol:'B',name:"Boron",number: 5,weight:10.81},{symbol:'C',name:"Carbon",number: 6},{symbol:'N',name:"Nitrogen",number: 7},{symbol:'O',name:"Oxigen",number: 8},{symbol:'F',name:"Fluorine",number: 9},{symbol:'Ne',name:"Neon",number: 10},{symbol:'Na',name:"Sodium",number: 11},{symbol:'Mg',name:"Magnesium",number: 12},{symbol:'Al',name:"Aluminum",number: 13},{symbol:'Si',name:"Silicon",number: 14},{symbol:'P',name:"Phosphorous",number: 15},{symbol:'S',name:"Sulfur",number: 16},{symbol:'Cl',name:"Chlorine",number: 17},{symbol:'Ar',name:"Argon",number: 18},{symbol:'K',name:"Potassium",number: 19},{symbol:'Ca',name:"Calcium",number: 20},{symbol:'Sc',name:"Scandium",number: 21},{symbol:'Ti',name:"Titanium",number: 22},{symbol:'V',name:"Vanadium",number: 23},{symbol:'Cr',name:"Chromium"},{symbol:'Mn',name:"Manganese"},{symbol:'Fe',name:"Iron"},{symbol:'Co',name:"Cobalt"},{symbol:'Ni',name:"Nickel"},{symbol:'Cu',name:"Copper"},{symbol:'Zn',name:"Zink"},{symbol:'Ga',name:"Gallium"},{symbol:'Ge',name:"Germanium"},{symbol:'As',name:"Arsenic"},{symbol:'Se',name:"Selenium"},{symbol:'Br',name:"Bromine"},{symbol:'Kr',name:"Krypton"},{symbol:'Rb',name:"Rubidium"},{symbol:'Sr',name:"Strontium"},{symbol:'Y',name:"Ytterbium"},{symbol:'Zr',name:"Zirconium"},{symbol:'Nb',name:"Niobium"},{symbol:'Mo',name:"Molybdenum"},{symbol:'Tc',name:"Technetium"},{symbol:'Ru',name:"Rutherfordium"},{symbol:'Rh',name:"Rhodium"},{symbol:'Pd',name:"Palladium"},{symbol:'Ag',name:"Silver"},{symbol:'Cd',name:"Cadmium"},{symbol:'In',name:"Indium"},{symbol:'Sn',name:"Tin"},{symbol:'Sb',name:"Antimony"},{symbol:'Te'},{symbol:'I'},{symbol:'Xe'},{symbol:'Cs'},{symbol:'Ba'},{symbol:'La'},{symbol:'Ce'},{symbol:'Pr'},{symbol:'Nd'},{symbol:'Pm'},{symbol:'Sm'},{symbol:'Eu'},{symbol:'Gd'},{symbol:'Tb'},{symbol:'Dy'},{symbol:'Ho'},{symbol:'Er'},{symbol:'Tm'},{symbol:'Yb'},{symbol:'Lu'},{symbol:'Hf'},{symbol:'Ta'},{symbol:'W'},{symbol:'Re'},{symbol:'Os'},{symbol:'Ir'},{symbol:'Pt'},{symbol:'Au'},{symbol:'Hg'},{symbol:'Tl'},{symbol:'Pb'},{symbol:'Bi'},{symbol:'Po'},{symbol:'At'},{symbol:'Rn'},{symbol:'Fr'},{symbol:'Ra'},{symbol:'Ac'},{symbol:'Th'},{symbol:'Pa'},{symbol:'U'},{symbol:'Np'},{symbol:'Pu'},{symbol:'Am'},{symbol:'Cm'},{symbol:'Bk'},{symbol:'Cf'},{symbol:'Es'},{symbol:'Fm',}{symbol:'Md'},{symbol:'No'},{symbol:'Lr'},{symbol:'Rf'},{symbol:'Db'},{symbol:'Sg'},{symbol:'Bh'},{symbol:'Hs'},{symbol:'Mt'},{symbol:'Ds'},{symbol:'Rg'},{symbol:'Cn'},{symbol:'Uut'},{symbol:'Fl'},{symbol:'Uup'},{symbol:'Lv'},{symbol:'Uus'},{symbol:'Uuo'}];
